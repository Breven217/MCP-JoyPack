{
	"mysql": {
		"name": "mysql",
		"displayName": "Joyful MySQL",
		"description": "A Model Context Protocol (MCP) server that allows AI assistants like Cascade to interact with both local and remote MySQL databases.",
		"docsUrl": "https://github.com/breven217/joyfulsql_mcp",
		"mcpConfig": {
			"command": "docker",
			"disabledTools": [],
			"args": [
				"run",
				"--rm",
				"-i",
				"--env-file",
				"~/.mcp/mysql.env",
				"ghcr.io/breven217/joyfulsql_mcp:latest"
			]
		},
		"env": {
			"LOCAL_HOST": {
				"type": "string",
				"value": "app.bamboolocal.com"
			},
			"LOCAL_USER": {
				"type": "string",
				"value": "web"
			},
			"LOCAL_PASSWORD": {
				"type": "password",
				"value": "password"
			},
			"LOCAL_PORT": {
				"type": "string",
				"value": "3396"
			},
			"ODI_HOST": {
				"type": "string",
				"value": "127.0.0.1"
			},
			"ODI_USER": {
				"type": "string",
				"value": "web"
			},
			"ODI_PASSWORD": {
				"type": "password",
				"value": "",
				"docsUrl": "https://vault.bamboohr.io/ui/vault/secrets/shared/show/shared-product-dev/stage_database_password"
			},
			"ODI_PORT": {
				"type": "string",
				"value": "3306"
			},
			"ODI_SSH_PORT": {
				"type": "string",
				"value": "22"
			},
			"ODI_SSH_KEY": {
				"type": "string",
				"value": "~/.ssh/id_rsa"
			},
			"WRITE_ACCESS": {
				"type": "string",
				"value": "false"
			}
		}
	},
	"github": {
		"name": "github",
		"displayName": "GitHub",
		"description": "The GitHub MCP Server is a Model Context Protocol (MCP) server that provides seamless integration with GitHub APIs, enabling advanced automation and interaction capabilities for developers and tools.",
		"docsUrl": "https://github.com/github/github-mcp-server",
		"mcpConfig": {
			"command": "docker",
			"disabledTools": [],
			"args": [
				"run",
				"-i",
				"--rm",
				"--env-file",
				"~/.mcp/github.env",
				"ghcr.io/github/github-mcp-server"
			]
		},
		"env": {
			"GITHUB_PERSONAL_ACCESS_TOKEN": {
				"type": "password",
				"value": "",
				"docsUrl": "https://github.com/settings/tokens/new",
				"description": "A personal access token for GitHub authentication, be sure to add the correct scope and SSO auth."
			}
		}
	},
	"mcp-atlassian": {
		"name": "mcp-atlassian",
		"displayName": "Atlassian",
		"description": "Model Context Protocol (MCP) server for Atlassian products (Confluence and Jira). This integration supports only Jira",
		"docsUrl": "https://github.com/sooperset/mcp-atlassian",
		"mcpConfig": {
			"command": "docker",
			"disabledTools": [],
			"args": [
				"run",
				"--rm",
				"-i",
				"--env-file",
				"~/.mcp/atlassian.env",
				"ghcr.io/sooperset/mcp-atlassian:latest"
			]
		},
		"env": {
			"JIRA_URL": {
				"type": "string",
				"value": "https://bamboohr.atlassian.net"
			},
			"JIRA_USERNAME": {
				"type": "string",
				"value": "[user]@bamboohr.com"
			},
			"JIRA_API_TOKEN": {
				"type": "password",
				"value": "",
				"docsUrl": "https://id.atlassian.com/manage-profile/security/api-tokens",
				"description": "An API token for Jira authentication, be sure to add the correct scope and SSO auth."
			}
		}
	},
	"rollbar": {
		"name": "rollbar",
		"displayName": "Rollbar",
		"description": "A Model Context Protocl (MCP) server for Rollbar.",
		"docsUrl": "https://github.com/rollbar/rollbar-mcp-server",
		"mcpConfig": {
			"command": "/Users/bjoyner/.mcp/repos/rollbar-mcp-server/rollbar-wrapper.sh",
			"args": [],
			"env": {}
		},
		"env": {
			"ROLLBAR_ACCESS_TOKEN": {
				"type": "password",
				"value": "",
				"docsUrl": "https://vault.bamboohr.io/ui/vault/secrets/shared/show/shared-product-dev/Rollbar-read-token-BambooHR-web-app-project"
			}
		},
		"localSetup": {
			"repo": "https://github.com/rollbar/rollbar-mcp-server.git",
			"command": "node",
			"prerequisites": ["node"],
			"entryPoint": "build/index.js"
		}
	},
	"mcp-bamboohr": {
		"name": "mcp-bamboohr",
		"displayName": "Bamboohr (MCP)",
		"description": "This is a small project that implements the MCP protocol and provides tools to interact with our internal tools.\n\nThe goal of this project is to allow models access to internal data from anywhere possible. For example, if we have a design doc in Slite, we want the LLM to read it so that it's generated responses take into account the design doc.",
		"docsUrl": "https://github.com/breven217/mcp-bamboohr",
		"mcpConfig": {
			"command": "/Users/bjoyner/.mcp/repos/mcp-bamboohr/mcp-bamboohr-wrapper.sh",
			"args": [],
			"env": {}
		},
		"env": {
			"MCP_DEBUG": {
				"type": "string",
				"value": "false"
			},
			"MCP_LOG_LEVEL": {
				"type": "string",
				"value": "DEBUG"
			},
			"UV_PROJECT": {
				"type": "string",
				"value": "~/.mcp/repos/mcp-bamboohr"
			},
			"SLITE_API_KEY": {
				"type": "password",
				"value": "",
				"docsUrl": "https://bamboohr.slite.com/settings/organization/api"
			}
		},
		"localSetup": {
			"repo": "https://github.com/BambooHR/mcp-bamboohr.git",
			"command": "uv",
			"prerequisites": ["uv", "vault"],
			"entryPoint": "mcp-bamboohr"
		}
	}
}