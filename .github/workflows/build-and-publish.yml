name: Build and Publish

on:
  release:
    types: [created, edited]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build (e.g., v1.0.0)'
        required: true
        default: ''

# Explicitly define permissions needed for release management
permissions:
  contents: write # This allows the workflow to upload assets to releases

jobs:
  build-tauri:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
      
      # No platform-specific dependencies needed for macOS
      
      - name: Install app dependencies and build web
        run: npm ci && npm run build
      
      - name: Build the app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ github.event.inputs.version || github.event.release.tag_name }}
          releaseName: 'MCP JoyPack v${{ github.event.inputs.version || github.event.release.tag_name }}'
          releaseBody: ${{ github.event.release.body || 'See the assets to download and install this version.' }}
          releaseDraft: false
          prerelease: ${{ github.event.release.prerelease }}

      # Create a copy of the DMG with a consistent name for direct downloads
      - name: Create consistent download asset
        if: runner.os == 'macOS'
        run: |
          # Find the DMG file that was just created
          DMG_FILE=$(find ./src-tauri/target/release/bundle/dmg -name "*.dmg" -type f | head -n 1)
          if [ -n "$DMG_FILE" ]; then
            # Create a copy with the consistent name
            cp "$DMG_FILE" "./src-tauri/target/release/bundle/dmg/MCP-JoyPack-latest.dmg"
            # Copy the install script to the release directory
            cp "./install.sh" "./src-tauri/target/release/bundle/dmg/install.sh"
          fi
      
      # Upload the consistently named file to the release
      - name: Upload consistent asset to release
        if: runner.os == 'macOS'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./src-tauri/target/release/bundle/dmg/MCP-JoyPack-latest.dmg
          asset_name: MCP-JoyPack-latest.dmg
          asset_content_type: application/x-apple-diskimage
          
      # Upload the install script to the release
      - name: Upload install script to release
        if: runner.os == 'macOS'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./src-tauri/target/release/bundle/dmg/install.sh
          asset_name: install.sh
          asset_content_type: text/x-shellscript
